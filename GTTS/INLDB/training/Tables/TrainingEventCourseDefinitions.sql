/*
    **************************************************************************
    TrainingEventCourseDefinitions.sql
    **************************************************************************  
*/
CREATE TABLE [training].[TrainingEventCourseDefinitions] 
(
    [TrainingEventCourseDefinitionID] BIGINT IDENTITY (1, 1) NOT NULL, 
    [TrainingEventID] BIGINT NOT NULL,
    [CourseDefinitionID] INT  NULL, 
    [CourseRosterKey] NVARCHAR(30) NOT NULL, 
    [TestsWeighting] TINYINT  NULL,     
    [PerformanceWeighting] TINYINT NULL,      
    [ProductsWeighting] TINYINT NULL,  
    [MinimumAttendance] TINYINT NULL,      
    [MinimumFinalGrade] TINYINT NULL,  
    [IsActive] BIT DEFAULT 1 NOT NULL,  
    [PerformanceRosterUploaded] BIT DEFAULT 0 NOT NULL,  
    [PerformanceRosterUploadedByAppUserID] INT NULL,  
    [PerformanceRosterUploadedDate] DATETIME NULL,  
	[ModifiedByAppUserID] INT NOT NULL,
	[ModifiedDate] DATETIME NOT NULL DEFAULT (getutcdate()),
	[SysStartTime] [datetime2](7) GENERATED ALWAYS AS ROW START NOT NULL DEFAULT (sysutcdatetime()),
	[SysEndTime] [datetime2](7) GENERATED ALWAYS AS ROW END NOT NULL,
    PERIOD FOR SYSTEM_TIME ([SysStartTime], [SysEndTime]),   
    CONSTRAINT [PK_TrainingEventCourseDefinitions]
        PRIMARY KEY (TrainingEventCourseDefinitionID),
    CONSTRAINT [FK_TrainingEventCourseDefinitions_TrainingEvents] 
        FOREIGN KEY ([TrainingEventID]) 
        REFERENCES [training].[TrainingEvents]([TrainingEventID]),
    CONSTRAINT [FK_TrainingEventCourseDefinitions_CourseDefinitions] 
        FOREIGN KEY ([CourseDefinitionID]) 
        REFERENCES [training].[CourseDefinitions]([CourseDefinitionID]), 
    CONSTRAINT [FK_TrainingEventCourseDefinitions_AppUsers] 
        FOREIGN KEY ([ModifiedByAppUserID]) 
        REFERENCES [users].[AppUsers]([AppUserID])   
)
ON [PRIMARY]
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE = [training].[TrainingEventCourseDefinitions_History]))
GO

/*  Table description  */
EXECUTE sp_addextendedproperty @name = N'MS_Description', 
	@level0type = N'SCHEMA', @level0name = N'training',
	@level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
	@value = N'Defines the roster configuration for a specific Training Event.  May be created manually by the user or initialized from a user-selected CourseDefinitions record.   TrainingEventCourseDefinitions records with values based on a selected CourseDefinitions record are not editable by the user.  Only those records manually entered by the user are editable.'
GO

/*  Primary Key description  */
EXEC sp_addextendedproperty @name = N'MS_Description',
	@level0type = N'SCHEMA', @level0name = N'training',
	@level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
    @level2type = N'COLUMN', @level2name = N'TrainingEventCourseDefinitionID',
	@value = N'Primary key & identity of the record in this table.'
GO

EXEC sp_addextendedproperty @name = N'MS_Description',
	@level0type = N'SCHEMA', @level0name = N'training',
	@level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
    @level2type = N'COLUMN', @level2name = N'TrainingEventID',
	@value = N'Training Event ID of the Training Event associated to this TrainingEventCourseDefinitions record.  Foreign key pointing to the TrainingEvents table.'
GO

EXEC sp_addextendedproperty @name = N'MS_Description',
	@level0type = N'SCHEMA', @level0name = N'training',
	@level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
    @level2type = N'COLUMN', @level2name = N'CourseDefinitionID',
	@value = N'ID of the initial CourseDefinitions record that was used as the initial values of this TrainingEventCourseDefinitions record.  If no CourseDefinitions record was selected/used to initialize this TrainingEventCourseDefinitions record, then this field will default to 0 (NULL).  Nullable foreign key pointing to the CourseConfiguration table.'
GO

EXEC sp_addextendedproperty @name = N'MS_Description',
	@level0type = N'SCHEMA', @level0name = N'training',
	@level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
    @level2type = N'COLUMN', @level2name = N'CourseRosterKey',
	@value = N'This is a system generated value or hash that is written into the Participant Performance Roster (PPR) xlsx file when the PPR is generated by the user.  This value is used to verify that the PPR file submitted by the Instructor and uploaded into the GTTS matches the current TrainingEventCourseDefinitions configuration for the Training Event. This NVARCHAR value is computed as a string concatenation of TrainingEventID +  GETUTCDATE() with all non-numeric values removed.'
GO

EXEC sp_addextendedproperty @name = N'MS_Description',
    @level0type = N'SCHEMA', @level0name = N'training',
    @level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
    @level2type = N'COLUMN', @level2name = N'TestsWeighting',
	@value = N'Weight of all Tests Scores combined as part of the overall course grade.  Sum of all Weights must = 100.'
GO

EXEC sp_addextendedproperty @name = N'MS_Description',
    @level0type = N'SCHEMA', @level0name = N'training',
    @level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
    @level2type = N'COLUMN', @level2name = N'PerformanceWeighting',
	@value = N'Weight of all Performance Scores combined as part of the overall course grade.  Sum of all Weights must = 100.'
GO

EXEC sp_addextendedproperty @name = N'MS_Description',
    @level0type = N'SCHEMA', @level0name = N'training',
    @level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
    @level2type = N'COLUMN', @level2name = N'ProductsWeighting',
	@value = N'Weight of all Products Scores combined as part of the overall course grade.  Sum of all Weights must = 100.'
GO

EXEC sp_addextendedproperty @name = N'MS_Description',
    @level0type = N'SCHEMA', @level0name = N'training',
    @level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
    @level2type = N'COLUMN', @level2name = N'MinimumAttendance',
	@value = N'Minimum required passing score (% basis) of participants attendance.'
GO

EXEC sp_addextendedproperty @name = N'MS_Description',
    @level0type = N'SCHEMA', @level0name = N'training',
    @level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
    @level2type = N'COLUMN', @level2name = N'MinimumFinalGrade',
	@value = N'Minimum required weighted passing total score (% basis) of all graded items needed to pass the course.'
GO

/*  IsActive column description  */
EXEC sp_addextendedproperty @name = N'MS_Description',
	@level0type = N'SCHEMA', @level0name = N'training',
	@level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
    @level2type = N'COLUMN', @level2name = N'IsActive',
	@value = N'Boolean value that indicates if the record is currently active and in use.'
GO


/*  PerformanceRosterUploaded column description  */
EXEC sp_addextendedproperty @name = N'MS_Description',
	@level0type = N'SCHEMA', @level0name = N'training',
	@level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
    @level2type = N'COLUMN', @level2name = N'PerformanceRosterUploaded',
	@value = N'Boolean value that indicates if a performance roster has been uploaded for this course definition. Default to 0 meaning that it has not been uploaded.'
GO

/*  PerformanceRosterUploadedByAppUserID column description  */
EXEC sys.sp_addextendedproperty @name = N'MS_Description',
	@level0type = N'SCHEMA', @level0name = N'training',
	@level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
	@level2type = N'COLUMN', @level2name = N'PerformanceRosterUploadedByAppUserID',
	@value = N'Identifies the user who uploaded a performance roster.  Foreign key pointing to the users.AppUsers table.'
GO

/*  PerformanceRosterUploadedDate column description  */
EXEC sys.sp_addextendedproperty @name = N'MS_Description',
	@level0type = N'SCHEMA', @level0name = N'training',
	@level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
	@level2type = N'COLUMN', @level2name = N'PerformanceRosterUploadedDate',
	@value = N'Date/Time when a preformance roster was uploaded.'
GO


/*  ModifiedByAppUserID column description  */
EXEC sys.sp_addextendedproperty @name = N'MS_Description',
	@level0type = N'SCHEMA', @level0name = N'training',
	@level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
	@level2type = N'COLUMN', @level2name = N'ModifiedByAppUserID',
	@value = N'Identifies the user who created or updated the record.  Foreign key pointing to the Users table.'
GO

/*  ModifiedDate column description  */
EXEC sys.sp_addextendedproperty @name = N'MS_Description',
	@level0type = N'SCHEMA', @level0name = N'training',
	@level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
	@level2type = N'COLUMN', @level2name = N'ModifiedDate',
	@value = N'Date/Time when the record was modified or created.  Normally would be in sync with SysStartTime.  Used by the application to track changes regardless if the table is temporalized or not.'
GO

/*  SysStartTime column description  */
EXEC sys.sp_addextendedproperty @name = N'MS_Description',
	@level0type = N'SCHEMA', @level0name = N'training',
	@level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
	@level2type = N'COLUMN', @level2name = N'SysStartTime',
	@value = N'System Date/Time when the record was created.  Used to denote the start of the timeperiod for which the record is valid.'
GO

/*  SysEndTime column description  */
EXEC sys.sp_addextendedproperty @name = N'MS_Description',
	@level0type = N'SCHEMA', @level0name = N'training',
	@level1type = N'TABLE',  @level1name = N'TrainingEventCourseDefinitions',
	@level2type = N'COLUMN', @level2name = N'SysEndTime',
	@value = N'System Date/Time when the record was updated.  Used to denote the end of the timeperiod for which the record is valid.'
GO